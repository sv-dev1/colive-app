[{"__symbolic":"module","version":4,"metadata":{"AlphaScrollComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"ion-alpha-scroll","template":"\n        <ion-list class=\"ion-alpha-list\">\n            <div *ngFor=\"let item of sortedItems\">\n                <ion-item-divider id=\"scroll-letter-{{item.letter}}\" *ngIf=\"item.isDivider\">{{item.letter}}\n                </ion-item-divider>\n                <ng-container *ngIf=\"!item.isDivider\">\n                    <ng-container\n                            *ngTemplateOutlet=\"itemTemplate; context: {'item': item, 'currentPageClass': currentPageClass}\">\n                    </ng-container>\n                </ng-container>\n            </div>\n        </ion-list>\n        <ul class=\"ion-alpha-sidebar\" [ngStyle]=\"calculateDimensionsForSidebar()\">\n            <li *ngFor=\"let alpha of alphabet\" [class]=\"setAlphaClass(alpha)\" tappable\n                (click)=\"alphaScrollGoToList(alpha.letter)\">\n                <a>{{alpha.letter}}</a>\n            </li>\n        </ul>\n    ","styles":["\n        .ion-alpha-list {\n            padding-right: 20px;\n        }\n\n        .ion-alpha-list .item {\n            border-right: none;\n        }\n\n        .ion-alpha-sidebar {\n            position: fixed;\n            right: 0;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-around;\n            z-index: 50000;\n        }\n\n        .ion-alpha-sidebar li {\n            line-height: 1.1;\n            list-style: none;\n            width: 20px;\n            text-align: center;\n        }\n\n        .ion-alpha-letter-indicator {\n            -webkit-transition: opacity 150ms ease-in-out;\n            transition: opacity 150ms ease-in-out;\n            opacity: 1;\n            background-color: rgba(0, 0, 0, 0.4);\n            position: absolute;\n            width: 100px;\n            height: 100px;\n            color: white;\n            display: flex;\n            visibility: hidden;\n            justify-content: center;\n            align-items: center;\n            font-size: 3em;\n            z-index: 999;\n        }\n\n        .ion-alpha-invalid a {\n            color: #cccccc;\n        }\n\n        .ion-alpha-active a {\n            color: darkkhaki !important;\n        }\n    "]}]}],"members":{"listData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":91,"character":5}}]}],"key":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":92,"character":5}}]}],"itemTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":93,"character":5}}]}],"currentPageClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":94,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":102,"character":65}}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":101,"character":36},{"__symbolic":"reference","module":"./order-by","name":"OrderBy","line":101,"character":65},{"__symbolic":"reference","module":"./alpha-scroll.service","name":"AlphaScrollService","line":102,"character":44},{"__symbolic":"reference","module":"ionic-angular","name":"Content","line":102,"character":89}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"setAlphaClass":[{"__symbolic":"method"}],"calculateDimensionsForSidebar":[{"__symbolic":"method"}],"alphaScrollGoToList":[{"__symbolic":"method"}],"setupHammerHandlers":[{"__symbolic":"method"}],"iterateAlphabet":[{"__symbolic":"method"}]}}}}]