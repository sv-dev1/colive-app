{"version":3,"sources":["webpack:///./src/app/pages/add-tasks/add-tasks.module.ts","webpack:///./src/app/pages/add-tasks/add-tasks.page.html","webpack:///./src/app/pages/add-tasks/add-tasks.page.scss","webpack:///./src/app/pages/add-tasks/add-tasks.page.ts"],"names":[],"mappings":"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","file":"pages-add-tasks-add-tasks-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddTasksPage } from './add-tasks.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddTasksPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AddTasksPage]\n})\nexport class AddTasksPageModule {}\n","module.exports = \"<ion-header>\\r\\n   <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n         <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n      <ion-buttons slot=\\\"end\\\">\\r\\n         <ion-back-button defaultHref=\\\"dashboard\\\"></ion-back-button>\\r\\n      </ion-buttons>\\r\\n      <ion-title>\\r\\n         Add task\\r\\n      </ion-title>\\r\\n   </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content [class.someClass]=\\\"applyClass\\\">\\r\\n   <form [formGroup]=\\\"team_form\\\" (submit)=\\\"registerTeam(team_form.value)\\\">\\r\\n   <ion-row>\\r\\n      <ion-col>\\r\\n         <div class=\\\"ion-text-start\\\">\\r\\n            <ion-item>\\r\\n               <ion-label style=\\\"color: #ed502d;\\\" position=\\\"floating\\\">Task name</ion-label>\\r\\n               <ion-input type=\\\"text\\\" formControlName=\\\"task_name\\\" required></ion-input>\\r\\n            </ion-item>\\r\\n            <div *ngIf=\\\"submitted && f.task_name.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n               <span *ngIf=\\\"f.task_name.errors.required\\\" style=\\\" text-align: left;color: red;font-style:italic;font-size: 12px;\\\">Title is required.\\r\\n               </span>\\r\\n                <span *ngIf=\\\"f.task_name.errors.pattern\\\" style=\\\" text-align: left;color: red;font-style:italic;font-size: 12px;\\\">Task name is not valid.\\r\\n               </span>\\r\\n            </div>\\r\\n         </div>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   <ion-row>\\r\\n      <ion-col>\\r\\n         <div class=\\\"ion-text-start\\\">\\r\\n            <ion-item>\\r\\n               <ion-label  position=\\\"floating\\\" style=\\\"color: #ed502d;\\\">Select Group</ion-label>\\r\\n               <ion-select  formControlName=\\\"team_id\\\" (ionChange)=\\\"onTeamSelection($event.target.value)\\\" value=\\\"Select Team\\\"> \\r\\n                  <ion-select-option *ngFor=\\\"let teamList of teamListArr\\\" [value]=\\\"teamList.teamId\\\" selected>{{teamList.name}}</ion-select-option>\\r\\n               </ion-select>\\r\\n            </ion-item>\\r\\n            <div *ngIf=\\\"submitted && f.team_id.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n               <span *ngIf=\\\"f.team_id.errors.required\\\" style=\\\"text-align: left;color: red;font-style:italic;font-size: 12px;\\\">This field is required.\\r\\n               </span>\\r\\n            </div>\\r\\n         </div>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   <ion-row>\\r\\n      <ion-col>\\r\\n         <div class=\\\"ion-text-start\\\">\\r\\n            <ion-item>\\r\\n               <ion-label style=\\\"color: #ed502d;\\\" position=\\\"floating\\\">Coliver</ion-label>\\r\\n               <ion-select multiple=\\\"true\\\" formControlName=\\\"assign_to\\\" value=\\\"Select Users\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\" required>\\r\\n               <ion-select-option value=\\\"{{userId}}\\\">Myself ({{nickname}})</ion-select-option>\\r\\n                <ion-select-option *ngFor=\\\"let userList of usersArr\\\" [value]=\\\"userList?.userId\\\">\\r\\n                      {{userList?.username}}\\r\\n                  </ion-select-option>  \\r\\n               </ion-select>\\r\\n            </ion-item>\\r\\n            <div *ngIf=\\\"submitted && f.assign_to.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n               <span *ngIf=\\\"f.assign_to.errors.required\\\" style=\\\"text-align: left;color: red;font-style:italic;font-size: 12px;\\\">This field is required.\\r\\n               </span>\\r\\n            </div>\\r\\n         </div>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   <ion-row>\\r\\n      <ion-col>\\r\\n         <div class=\\\"ion-text-start\\\">\\r\\n            <ion-item>\\r\\n               <ion-label style=\\\"color: #ed502d;\\\" position=\\\"floating\\\">Due date</ion-label>\\r\\n               <ion-datetime formControlName=\\\"due_date\\\"  displayFormat=\\\"YYYY-MM-DD\\\" placeholder=\\\"Select Date\\\" [max]=\\\"maxData\\\" required></ion-datetime>\\r\\n            </ion-item>\\r\\n            <div *ngIf=\\\"submitted && f.due_date.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n               <span *ngIf=\\\"f.due_date.errors.required\\\" style=\\\" text-align: left;color: red;font-style:italic;font-size: 12px;\\\">This field is required.\\r\\n               </span>\\r\\n            </div>\\r\\n         </div>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   <ion-row>\\r\\n      <ion-col>\\r\\n         <div class=\\\"ion-text-start\\\">\\r\\n            <ion-item>\\r\\n               <ion-label style=\\\"color: #ed502d;\\\" position=\\\"floating\\\">Please choose one</ion-label>\\r\\n               <ion-select formControlName=\\\"category\\\" value=\\\"Select User\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let category of categoriesArr\\\" [value]=\\\"category.category_id\\\">{{category.name}}</ion-select-option>\\r\\n               </ion-select>\\r\\n            </ion-item>\\r\\n            <!--  <div *ngIf=\\\"submitted && f.category.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n               <span *ngIf=\\\"f.category.errors.required\\\" style=\\\"text-align: left;color: red;font-style:italic;font-size: 12px;\\\">This field is required.\\r\\n               </span>\\r\\n               </div> -->\\r\\n         </div>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   <ion-row>\\r\\n      <ion-col>\\r\\n         <div class=\\\"ion-text-start\\\">\\r\\n            <ion-item>\\r\\n               <button slot=\\\"start\\\" (click)=\\\"selectImage()\\\" type=\\\"button\\\" fill=\\\"clear\\\" color=\\\"light\\\" >\\r\\n                  <ion-icon slot=\\\"start\\\" name=\\\"camera\\\"></ion-icon>\\r\\n                  Upload photo (optional)\\r\\n               </button>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"image_url\\\">\\r\\n               <img   [src]=\\\"image_url\\\" (click)=\\\"selectImage()\\\" onError=\\\"src='https://dummyimage.com/600x400/000/fff'\\\" class=\\\"profile-img\\\"> \\r\\n            </ion-item>\\r\\n         </div>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   <ion-row>\\r\\n      <ion-col>\\r\\n         <div class=\\\"ion-text-start\\\">\\r\\n            <ion-item>\\r\\n               <ion-label style=\\\"color: #ed502d;\\\" position=\\\"floating\\\">Notes (optional)</ion-label>\\r\\n               <ion-textarea rows=\\\"6\\\"  type=\\\"text\\\" formControlName=\\\"notes\\\"></ion-textarea>\\r\\n            </ion-item>\\r\\n         </div>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   <ion-row>\\r\\n      <ion-col>\\r\\n         <div class=\\\"ion-text-start\\\">\\r\\n            <div *ngIf=\\\"isSuccess == true\\\" >\\r\\n               <span class=\\\"for-sub-name\\\">{{sucessArr.message}}</span>\\r\\n            </div>\\r\\n         </div>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   <ion-row>\\r\\n      <ion-col>\\r\\n         <div class=\\\"ion-text-start\\\">\\r\\n            <button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\">Add task\\r\\n            </button>\\r\\n         </div>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   </form>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkZC10YXNrcy9hZGQtdGFza3MucGFnZS5zY3NzIn0= */\"","import {  Component,  OnInit} from '@angular/core';\nimport {  Router} from '@angular/router';\nimport {  FormGroup,  FormBuilder,  Validators,  FormControl,  FormArray} from '@angular/forms';\nimport {  ItemService} from '../../services/item.service';\nimport {  AlertController} from '@ionic/angular';\nimport {  LoadingController} from '@ionic/angular';\nimport {  environment} from '../../../environments/environment';\nimport {  HttpClient,  HttpHeaders,  HttpClientModule} from '@angular/common/http';\nimport {  Observable} from 'rxjs/Observable';\nimport {  Camera,  CameraOptions,  PictureSourceType} from '@ionic-native/camera/ngx';\nimport {  ActionSheetController,  Platform} from '@ionic/angular';\n\n@Component({\n  selector: 'app-add-tasks',\n  templateUrl: './add-tasks.page.html',\n  styleUrls: ['./add-tasks.page.scss'],\n})\nexport class AddTasksPage implements OnInit {\n\n  base_url: string = \"\";\n  userId: string = \"\";\n  loggedInUsername: string = \"\";\n  image_url: string = \"\";\n  team_form: FormGroup;\n  submitted = false;\n  fagree = false;\n  isError: boolean = false;\n  isSuccess: boolean = false;\n  res: any = [];\n  errorsArr: any = [];\n  sucessArr: any = [];\n  assignArr: any = [];\n  fileData: any;\n  ImageObj: any;\n  usersArr: any = [];\n  teamListArr: any = [];\n  categoriesArr: any = [];\n\n  userListArr = [];\n  usersArr1 = [];\n  userListArrForAssign = [];\n  nickname: string = '';\n  \n  \n  maxData : any = (new Date()).getFullYear() + 5;\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n    public formBuilder: FormBuilder,\n    public itemService: ItemService,\n    public alertController: AlertController,\n    public loadingController: LoadingController,\n    private camera: Camera,\n    private actionSheetController: ActionSheetController,\n    private platform: Platform\n  ) {\n    //this.getUsersList();\n    this.base_url = environment.base_url;\n    this.team_form = this.formBuilder.group({\n      task_name: new FormControl('', [Validators.required,Validators.pattern(\"[a-zA-Z0-9]+[a-zA-Z0-9 ]+\")]),\n      assign_to: new FormControl('', Validators.required),\n      team_id: new FormControl('', Validators.required),\n      due_date: new FormControl('', Validators.required),\n      photo: new FormControl(''),\n      category: new FormControl(''),\n      notes: new FormControl(''),\n    });\n    this.userId = sessionStorage.getItem(\"loggedInId\");\n    this.loggedInUsername = sessionStorage.getItem(\"loggedInUsername\");\n  }\n\n  ngOnInit() {\n    this.nickname = sessionStorage.getItem(\"loggedInUsername\");\n    \n    \n\n  }\n  ionViewWillEnter() {\n    this.getTeamsList();\n  }\n\n  async custommessage(msg) {\n    const loading = await this.loadingController.create({\n      message: msg,\n      duration: 2000,\n      cssClass: 'custom-class custom-loading'\n    });\n    await loading.present();\n    const {\n      role,\n      data\n    } = await loading.onDidDismiss();\n  }\n\n  getTeamsList(): void {\n    console.log('All teams gets list out under this function');\n\n    let token;\n    if (sessionStorage.getItem(\"auth_token\") != undefined) {\n      token = sessionStorage.getItem(\"auth_token\");\n    }\n    this.presentLoading();\n    //const httpOptions = { headers: new HttpHeaders({'authorization': token })};\n\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', token);\n\n    this.http.get(this.base_url + 'getTeam', {\n      headers: headers\n    }).subscribe((response: any) => {\n      this.teamListArr = response.teams;\n      this.loadingController.dismiss().then(a => console.log('dismissed'));\n    }, error => {\n      console.log(error.error);\n      this.loadingController.dismiss().then(a => console.log('ERROR'));\n    });\n    this.http.get(this.base_url + 'categories', {\n      headers: headers\n    }).subscribe((response: any) => {\n      this.categoriesArr = response.categories;\n    }, error => {\n      //console.log(\"ERROR\");\n      //  console.log(error.error);\n      if (error.error == 'Unauthorized') {\n        this.custommessage('Please login again...');\n      }\n\n    });\n    this.loadingController.dismiss().then(a => console.log('dismissed'));\n  }\n\n  onTeamSelection(checkedVal): void {\n    /*\n        if(checkedVal == this.userId)\n        {\n          this.usersArr = [];\n          let arr = {\n            'userId':this.userId,\n            'login':{ 'username':this.loggedInUsername }\n          };\n        this.usersArr = arr;\n        console.log(this.usersArr);\n        return;\n        }\n    */\n    let postArr = {\n      'teamId': [checkedVal]\n    };\n    this.usersArr=[];\n    let token;\n    this.presentLoading();\n    if (sessionStorage.getItem(\"auth_token\") != undefined) {\n      token = sessionStorage.getItem(\"auth_token\");\n    }\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'authorization': token\n      })\n    };\n    this.http.post(this.base_url + 'team/users', postArr, httpOptions).subscribe((response: any) => {\n      let arrayUniqe = [];\n      response.teams.forEach(obj => {\n        let newObj = {};\n        newObj['id'] = obj.id,\n          newObj['team_id'] = obj.team_id,\n          newObj['userId'] = obj.userId,\n          newObj['userProfile'] = obj.userProfile,\n          newObj['login'] = obj.login,\n          newObj['isChecked'] = false,\n          arrayUniqe.push(newObj);\n      });\n      let getresArr = this.getUnique(arrayUniqe, 'userId');\n      this.usersArr1 = getresArr;\n       this.usersArr1.forEach(element => {\n          if(element.login.username != this.nickname){\n            this.usersArr.push({userId:element.userId, name:element.userProfile.firstName+' '+element.userProfile.lastName, email:element.userProfile.email,username:element.login.username });\n          }\n      });\n       console.log(this.usersArr);\n      this.loadingController.dismiss();\n    }, error => {\n      //  console.log(\"ERROR\");\n      //   console.log(error);\n    });\n  }\n\n  getUnique(arr, comp) {\n    const unique = arr\n      .map(e => e[comp])\n      // store the keys of the unique objects\n      .map((e, i, final) => final.indexOf(e) === i && i)\n      // eliminate the dead keys & store unique objects\n      .filter(e => arr[e]).map(e => arr[e]);\n    return unique;\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      duration: 4000,\n      cssClass: 'custom-class custom-loading1'\n    });\n    await loading.present();\n    const {\n      role,\n      data\n    } = await loading.onDidDismiss();\n  }\n\n\n  get f() {\n    return this.team_form.controls;\n  }\n\n  async presentAlert(messageC) {\n    const alert = await this.alertController.create({\n      header: 'Success Message!',\n      subHeader: messageC,\n      message: 'Click Okay to redirect to dashboard page and click Cancel to stay on same page.',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        cssClass: 'secondary',\n        handler: (blah) => {\n          console.log('Confirmed Cancel: Cancelled');\n        }\n      }, {\n        text: 'Okay',\n        handler: () => {\n          this.router.navigate(['house-chores']);\n          console.log('Confirmed Okay');\n        }\n      }]\n    });\n    alert.present();\n  }\n  fileProgress(event) {\n    this.fileData = event.target.files[0];\n    console.log(this.fileData);\n  }\n\n  registerTeam(form) {\n\n    this.submitted = true;\n    if (this.team_form.invalid) {\n      //   console.log(this.team_form);\n      return;\n    } else {\n\n      let dateString = form.due_date;\n      let today = new Date();\n      let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      let taskDate = dateString+'T'+time;\n      const input_data = {\n        \"task_name\": form.task_name,\n        \"team_id\": form.team_id,\n        \"assign_to\": form.assign_to,\n        \"due_date\": taskDate,\n        \"photo\": this.ImageObj,\n        \"category\": form.category,\n        \"notes\": form.notes,\n      }\n      //      console.log(input_data);  \n      const formData = new FormData();\n      formData.append('task_name', input_data.task_name);\n      formData.append('assignTo', input_data.assign_to);\n      formData.append('teamId', input_data.team_id);\n      formData.append('due_date', input_data.due_date);\n      formData.append('photo', this.ImageObj);\n      formData.append('category_id', input_data.category);\n      formData.append('notes', input_data.notes);\n      let token;\n      if (sessionStorage.getItem(\"auth_token\") != undefined) {\n        token = sessionStorage.getItem(\"auth_token\");\n      }\n      this.presentLoading();\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'authorization': token\n        })\n      };\n      this.http.post(this.base_url + 'createTask', formData, httpOptions).subscribe((response: any) => {\n        //  console.log(response); \n        this.isSuccess = true;\n        this.sucessArr = response;\n        this.isError = false;\n        this.loadingController.dismiss().then(a => console.log('dismissed'));\n        this.team_form.reset();\n        this.presentAlert(response.message);\n        this.sucessArr = [];\n      }, error => {\n        console.log(\"ERROR\");\n        console.log(error.error);\n      });\n    }\n  }\n\n  async selectImage() {\n    const actionSheet = await this.actionSheetController.create({\n      header: \"Select Image source\",\n      buttons: [{\n          text: 'Load from Library',\n          handler: () => {\n            this.captureImage(true);\n          }\n        },\n        {\n          text: 'Use Camera',\n          handler: () => {\n            this.captureImage(false);\n          }\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  async captureImage(useAlbum: boolean) {\n    const options: CameraOptions = {\n      quality: 100,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n      ...useAlbum ? {\n        sourceType: this.camera.PictureSourceType.SAVEDPHOTOALBUM\n      } : {}\n    }\n    const imageData = await this.camera.getPicture(options);\n    this.image_url = `data:image/jpeg;base64,${imageData}`;\n    var contentType = 'image/jpeg'\n    var realData = imageData;\n    this.ImageObj = this.b64toBlob(realData, contentType);\n\n  }\n\n  b64toBlob(b64Data, contentType) {\n    contentType = contentType || '';\n    let sliceSize = 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      var slice = byteCharacters.slice(offset, offset + sliceSize);\n      var byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n      var byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {\n      type: contentType\n    });\n    return blob;\n  }\n\n}"],"sourceRoot":""}