{"version":3,"sources":["webpack:///./src/app/pages/home/home.module.ts","webpack:///./src/app/pages/home/home.page.html","webpack:///./src/app/pages/home/home.page.scss","webpack:///./src/app/pages/home/home.page.ts"],"names":[],"mappings":"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","file":"pages-home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes) \n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Login\\r\\n    <ion-label color=\\\"secondary\\\" *ngIf=\\\"isSuccess== true\\\">-Login Successfully!!!</ion-label>\\r\\n    </ion-title>\\r\\n\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n  <!--     <ion-button [routerLink]=\\\"['/new-item']\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\r\\n      </ion-button> -->\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!-- \\r\\n<ion-content padding>\\r\\n<form [formGroup]=\\\"login_form\\\" (submit)=\\\"login(login_form.value)\\\">\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Username</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"username\\\" required></ion-input>\\r\\n      <div *ngIf=\\\"isError== true && errorsArr.username\\\">{{errorsArr.username}}</div> \\r\\n              \\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Password</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" required></ion-input>\\r\\n      <div *ngIf=\\\"isError== true && errorsArr.password\\\">{{errorsArr.password}}</div> \\r\\n    </ion-item>\\r\\n    <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!login_form.valid\\\" >Login</ion-button>\\r\\n  </form>\\r\\n<!-- [disabled]=\\\"!login_form.valid\\\" -->\\r\\n<!--   <ion-list>\\r\\n    <ion-item *ngFor=\\\"let item of items\\\" [routerLink]=\\\"['/update-item', item.id]\\\">\\r\\n      <ion-label>\\r\\n        {{ item.title }}\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list> \\r\\n</ion-content> -->\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup,FormBuilder,Validators,FormControl,FormArray } from '@angular/forms';\nimport { ItemService } from '../../services/item.service';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  login_form: FormGroup;\n  submitted = false;\n  isError : boolean = false;\n  isSuccess : boolean = false;\n  res:any = [];\n  errorsArr:any = []; \n  sucessArr:any = []; \n\n  constructor(\n    private router: Router,\n    public formBuilder: FormBuilder, \n    public itemService: ItemService,\n    public alertController: AlertController\n  ){\n    this.login_form = this.formBuilder.group({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit(){ \n  }\n // get f() { return this.loginForm.controls; }\n  presentAlert() {\n    const alert = this.alertController.create({\n        header: 'Alert',\n        subHeader: 'Subtitle',\n        message: 'This is an alert message.',\n        buttons: ['OK']\n    });\n  }\n   \n  login(form){\n    const input_data = { \n      \"username\" : form.username,\n      \"password\" : form.password,     \n    }  \n        this.submitted = true; \n        console.log(input_data); \n        this.itemService.login(input_data).subscribe(response=>{\n        console.log(response); \n        if( response['token']){\n          sessionStorage.setItem(\"auth_token\", response['token']);\n          this.router.navigate(['/dashboard']);  \n          this.isSuccess = true;\n          this.sucessArr = response;\n          this.isError = false;\n          this.presentAlert();\n        }\n\n        },error=>{ \n        this.isError = true;\n        console.log(\"ERROR\");\n        console.log(error.error);\n        this.errorsArr = error.error;\n        }); \n   //   }\n \n  }\n \n}\n"],"sourceRoot":""}