{"version":3,"sources":["webpack:///./src/app/helpers/must-match.validator.ts","webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/register.page.html","webpack:///./src/app/register/register.page.scss","webpack:///./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-content>\\r\\n <ion-row>       \\r\\n    <ion-col>\\r\\n      <div class=\\\"ion-text-center\\\"> \\r\\n        <ion-img src=\\\"assets/images/Logo-colive.png\\\" style=\\\"max-width: 170px;width: auto;text-align: center; margin: auto;\\\"></ion-img>   \\r\\n      </div>\\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n\\r\\n  <ion-row>       \\r\\n    <ion-col><div class=\\\"headd ion-text-center\\\">  \\r\\n         <h6 style=\\\"margin-bottom: 0; margin-top: 0;font-weight: normal;font-size: 14px;\\\">Login using social media to get quick access</h6></div>\\r\\n    </ion-col>\\r\\n  </ion-row>  \\r\\n  \\r\\n  <ion-row>    \\r\\n    <ion-col class=\\\"centered\\\">  \\r\\n    <button class=\\\"submit-btn\\\" expand=\\\"block\\\" style=\\\"border: none;padding: 10px 15px; margin: 30px 12px 20px 0; border-radius: 2px; background: #295dc3;color: #fff;\\\" ><ion-icon name=\\\"logo-facebook\\\"></ion-icon>Login</button>\\r\\n      <button class=\\\"submit-btn\\\" expand=\\\"block\\\" style=\\\"border: none;padding: 10px 15px;margin: 30px 10px 20px 0;border-radius: 2px;background: #23abff;color: #fff\\\"><ion-icon name=\\\"logo-twitter\\\"></ion-icon>Login</button>\\r\\n      <button class=\\\"submit-btn\\\" expand=\\\"block\\\" style=\\\"border: none;padding: 10px 15px;margin: 30px 0 20px 0;border-radius: 2px;background: #ff2b26;color: #fff;\\\"><ion-icon name=\\\"logo-google\\\"></ion-icon>Login</button> \\r\\n    </ion-col>\\r\\n  </ion-row> \\r\\n\\r\\n<ion-segment>  \\r\\n  <ion-segment-button [routerLink]=\\\"['/login']\\\" value=\\\"login\\\">\\r\\n    <ion-label>Login</ion-label>\\r\\n  </ion-segment-button> \\r\\n</ion-segment>\\r\\n \\r\\n<form [formGroup]=\\\"register_form\\\" (submit)=\\\"register(register_form.value)\\\">\\r\\n  \\r\\n\\r\\n   \\r\\n    \\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"ion-text-start\\\">\\r\\n          <ion-item>\\r\\n            <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Username</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"username\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n             <span *ngIf=\\\"f.username.errors.required\\\" style=\\\" text-align: left;color: red;\\\">This field is required.\\r\\n             </span> \\r\\n          </div>\\r\\n            <div  class=\\\"ion-text-left\\\" style=\\\"text-align: left;color: red;padding: 10px;\\\" *ngIf=\\\"isError== true && errorsArr.username\\\">{{errorsArr.username}}</div>  \\r\\n          \\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>    \\r\\n  \\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"ion-text-start\\\">\\r\\n            <ion-item>\\r\\n              <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Email</ion-label>\\r\\n              <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" required minlength=\\\"6\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n             <span *ngIf=\\\"f.email.errors.required\\\" style=\\\" text-align: left;color: red;\\\">This field is required.\\r\\n             </span>  \\r\\n             <span *ngIf=\\\"f.email.errors.email\\\" style=\\\" text-align: left;color: red;\\\">Please check your email.\\r\\n             </span> \\r\\n          </div>\\r\\n              <div  class=\\\"ion-text-left\\\" style=\\\"text-align: left;color: red;padding: 10px;\\\" *ngIf=\\\"isError== true && errorsArr.email\\\">{{errorsArr.email}}</div>   \\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"ion-text-start\\\"> \\r\\n          <ion-item>\\r\\n              <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Password</ion-label>\\r\\n              <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" minlength=\\\"6\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n             <span *ngIf=\\\"f.password.errors.required\\\" style=\\\" text-align: left;color: red;\\\">This field is required.\\r\\n             </span> \\r\\n             <span *ngIf=\\\"f.password.errors.minlength\\\" style=\\\" text-align: left;color: red;\\\">Minimum length for password field is 6 .\\r\\n             </span> \\r\\n          </div>\\r\\n            <div  class=\\\"ion-text-left\\\" style=\\\"text-align: left;color: red;padding: 10px;\\\" *ngIf=\\\"isError== true && errorsArr.password\\\">{{errorsArr.password}}</div>  \\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"ion-text-start\\\">\\r\\n          <ion-item>\\r\\n              <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Confirm Password</ion-label>\\r\\n              <ion-input type=\\\"password\\\" formControlName=\\\"confirm_password\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <div *ngIf=\\\"submitted && f.confirm_password.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n             <span *ngIf=\\\"f.confirm_password.errors.required\\\" style=\\\" text-align: left;color: red;\\\">This field is required.\\r\\n             </span> \\r\\n          </div>          \\r\\n          <div *ngIf=\\\"submitted && f.confirm_password.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n             <span *ngIf=\\\"f.confirm_password.errors.mustMatch\\\" style=\\\" text-align: left;color: red;\\\">Password confirm field must match with password.\\r\\n             </span> \\r\\n          </div>\\r\\n            <div  class=\\\"ion-text-left\\\" style=\\\"text-align: left;color: red;padding: 10px;\\\" *ngIf=\\\"isError== true && errorsArr.password2\\\">{{errorsArr.password2}}</div> \\r\\n          \\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    \\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"ion-text-start\\\">\\r\\n          <ion-item>\\r\\n              <ion-label color=\\\"primary\\\" position=\\\"floating\\\">User Type</ion-label>  \\r\\n              <ion-select formControlName=\\\"roleId\\\" value=\\\"Select User Type\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\" required>\\r\\n                <ion-select-option value=\\\"4\\\">Tenant</ion-select-option>\\r\\n                <ion-select-option value=\\\"3\\\">Landlord</ion-select-option> \\r\\n              </ion-select>  \\r\\n          </ion-item>\\r\\n          <div *ngIf=\\\"submitted && f.roleId.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n             <span *ngIf=\\\"f.roleId.errors.required\\\" style=\\\" text-align: left;color: red;\\\">This field is required.\\r\\n             </span> \\r\\n          </div>\\r\\n            <div  class=\\\"ion-text-left\\\" style=\\\"text-align: left;color: red;padding: 10px;\\\" *ngIf=\\\"isError== true && errorsArr.password2\\\">{{errorsArr.password2}}</div> \\r\\n          \\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  \\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"ion-text-start\\\">\\r\\n          <ion-item> \\r\\n              <ion-checkbox formControlName=\\\"agree\\\" color=\\\"primary\\\" checked=\\\"false\\\" required></ion-checkbox>  \\r\\n                <ion-label style=\\\"padding-left: 5px; display: flex;\\\"> I agree to the privacy policy and terms of service.</ion-label>\\r\\n          </ion-item>\\r\\n          <div *ngIf=\\\"submitted && f.agree.errors\\\" class=\\\"invalid-feedback\\\" style=\\\"padding: 10px; left;\\\">\\r\\n             <span *ngIf=\\\"f.agree.errors.required || f.agree == undefined\\\" style=\\\" text-align: left;color: red;\\\">This field is required.\\r\\n             </span>\\r\\n            <!-- <span *ngIf=\\\"fagree\\\" style=\\\" text-align: left;color: red;\\\">This field is required.\\r\\n             </span> --> \\r\\n          </div> \\r\\n          \\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>  \\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"ion-text-start\\\">\\r\\n          <button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\">Register\\r\\n          </button>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row> \\r\\n  </form> \\r\\n    <ion-row>\\r\\n     <ion-col> \\r\\n      <div class=\\\"ion-text-center\\\"> \\r\\n           <a class=\\\"cutm-policy\\\" href=\\\"https://www.freeprivacypolicy.com/privacy/view/7a10aabac9e57a1b138755a444037066\\\" >Terms and conditions, privacy policy and GDPR</a>\\r\\n      </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup,FormBuilder,Validators,FormControl,FormArray } from '@angular/forms';\nimport { ItemService } from '../services/item.service';\nimport { AlertController } from '@ionic/angular'; \nimport { LoadingController } from '@ionic/angular';\nimport { MenuController } from '@ionic/angular';\nimport { MustMatch } from '../helpers/must-match.validator';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n register_form: FormGroup;\n  submitted = false;\n  fagree = false;\n  isError : boolean = false;\n  isSuccess : boolean = false;\n  res:any = [];\n  errorsArr:any = []; \n  sucessArr:any = []; \n\n  constructor(\n    private router: Router,\n    public formBuilder: FormBuilder, \n    public itemService: ItemService,\n    public alertController: AlertController,\n    public loadingController: LoadingController,\n    public menuCtrl: MenuController\n  ){\n    this.register_form = this.formBuilder.group({\n      username: new FormControl('', Validators.required),\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      confirm_password: ['', [Validators.required]],\n      roleId: ['', [Validators.required]],\n      agree: ['false', Validators.requiredTrue]\n    }, {\n            validator: MustMatch('password', 'confirm_password')\n        });\n\n  }\n     /* ionViewWillEnter() {\n        this.menuCtrl.enable(false);\n     }\n     ionViewDidLeave() {\n        this.menuCtrl.enable(true);\n     } */\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      subHeader: 'User register successfully.',\n      message: 'Now you are redirected to dashboard.',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  async presentLoading(msg) {\n    const loading = await this.loadingController.create({\n      message: msg,\n      duration: 4000,\n      cssClass: 'custom-class custom-loading'\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss(); \n    this.router.navigate(['/login']);  \n  }\n\n  ngOnInit(){  \n  }\n  get f() { return this.register_form.controls; } \n\n  async pleaseWait() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      duration: 10000,\n      cssClass: 'custom-class custom-loading'\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n  }\n  register(form){   \n    this.submitted = true;  \n    console.log(this.register_form.controls);\n    if (this.register_form.invalid) {  \n      return;\n    }else{  \n      const input_data = \n      { \n      \"email\" : form.email,\n      \"username\" : form.username,\n      \"password\" : form.password,     \n      \"password2\" : form.confirm_password,     \n      \"roleId\" : form.roleId,     \n      }\n      console.log(input_data); \n         this.pleaseWait();\n      this.itemService.register(input_data).subscribe(response=>{\n      this.loadingController.dismiss().then(a => console.log('dismissed')); \n      this.presentLoading(response['message']);\n\n     /* if( response['token'])\n        {\n          sessionStorage.setItem(\"auth_token\", response['token']);  \n          sessionStorage.setItem(\"loggedInId\", response['userId']);\n          sessionStorage.setItem(\"loggedInUsername\", response['username']);\n          sessionStorage.setItem(\"roleId\", response['roleId']);\n          sessionStorage.setItem(\"ref_code\", response['ref_code']);\n          sessionStorage.setItem(\"userQuestinaire\", response['userQuestinaire']);\n\n          localStorage.setItem(\"auth_token\", response['token']);\n          localStorage.setItem(\"loggedInId\", response['userId']);\n          localStorage.setItem(\"loggedInUsername\", response['username']);\n          localStorage.setItem(\"roleId\", response['roleId']);\n          localStorage.setItem(\"ref_code\", response['ref_code']);\n          localStorage.setItem(\"userQuestinaire\", response['userQuestinaire']);\n\n          this.isSuccess = true;\n          this.sucessArr = response;\n          this.isError = false;  \n          this.presentLoading();\n        }   */ \n      },error=>{ \n      this.isError = true;\n      console.log(\"ERROR\");\n      console.log(error.error);\n      this.errorsArr = error.error;\n      });  \n    }\n  }\n}\n"],"sourceRoot":""}