{"version":3,"sources":["webpack:///./src/app/pages/teams/teams.module.ts","webpack:///./src/app/pages/teams/teams.page.html","webpack:///./src/app/pages/teams/teams.page.scss","webpack:///./src/app/pages/teams/teams.page.ts"],"names":[],"mappings":"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","file":"pages-teams-teams-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TeamsPage } from './teams.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TeamsPage]\n})\nexport class TeamsPageModule {}\n","module.exports = \"<ion-header>\\r\\n   <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n         <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n      <ion-buttons slot=\\\"end\\\">\\r\\n         <ion-back-button defaultHref=\\\"dashboard\\\"></ion-back-button>\\r\\n      </ion-buttons>\\r\\n      <ion-title>\\r\\n         Groups\\r\\n      </ion-title>\\r\\n   </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n   <ion-row>\\r\\n      <ion-col [routerLink]=\\\"['/house-chores']\\\">\\r\\n         <ion-button type =\\\"button\\\" color=\\\"mycolor\\\" class=\\\"custom-btn\\\">All</ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col [routerLink]=\\\"['/calender']\\\">\\r\\n         <ion-button type =\\\"button\\\"   color=\\\"mycolor\\\" class=\\\"custom-btn\\\">Calendar</ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col [routerLink]=\\\"['/teams']\\\">\\r\\n         <ion-button type =\\\"button\\\" color=\\\"mycolor\\\" class=\\\"active custom-btn\\\">Tasks of my groups</ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col [routerLink]=\\\"['/add-tasks']\\\">\\r\\n         <ion-button type =\\\"button\\\" color=\\\"mycolor\\\" class=\\\"custom-btn\\\">Add Task</ion-button>\\r\\n      </ion-col>\\r\\n   </ion-row>\\r\\n   <ion-card>\\r\\n      <ion-card-header>\\r\\n         <ion-card-subtitle>Task listing</ion-card-subtitle>\\r\\n         <ion-card-title>Tasks</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n         <ion-list>\\r\\n            <ion-item *ngFor=\\\"let taskList of taskListArr\\\"  [routerLink]=\\\"['/add-suggestion']\\\"  [queryParams]=\\\"{taskId: taskList.taskId}\\\">\\r\\n            <ion-icon name=\\\"checkmark-circle-outline\\\" style=\\\"height:20px;\\\"></ion-icon>\\r\\n            <ion-label>{{taskList['task.task_name']}}</ion-label>\\r\\n              <ion-item-options>\\r\\n                   <button danger (click)=\\\"removeItem(taskList)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</button>\\r\\n                 </ion-item-options>\\r\\n      </ion-item>\\r\\n         </ion-list>\\r\\n      </ion-card-content>\\r\\n   </ion-card>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlYW1zL3RlYW1zLnBhZ2Uuc2NzcyJ9 */\"","import {  Component,  OnInit} from '@angular/core';\nimport {  Router} from '@angular/router';\nimport {  FormGroup,  FormBuilder,  Validators,  FormControl,  FormArray} from '@angular/forms';\nimport {  ItemService} from '../../services/item.service';\nimport {  AlertController,  ModalController,  LoadingController,  ActionSheetController,  Platform} from '@ionic/angular';\nimport {  environment} from '../../../environments/environment';\nimport {  HttpClient,  HttpHeaders,  HttpClientModule} from '@angular/common/http';\nimport {  CalendarsPage} from '../calender/calenders.page';\nimport { PopoverController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.page.html',\n  styleUrls: ['./teams.page.scss'],\n})\nexport class TeamsPage implements OnInit {\n  base_url: string = \"\";\n  taskListArr: any = [];\n  userListArr: any = [];\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n    public formBuilder: FormBuilder,\n    public itemService: ItemService,\n    public alertController: AlertController,\n    public loadingController: LoadingController,\n    public modalController: ModalController,\n    public popoverController: PopoverController, \n\n  ) {\n    this.base_url = environment.base_url;\n    this.getTeamsList();\n  }\n\n  ngOnInit() {}\n\n  async presentModal() {\n    const modal = await this.modalController.create({\n      component: CalendarsPage\n    });\n    return await modal.present();\n  }\n\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      duration: 2000,\n      cssClass: 'custom-class custom-loading'\n    });\n    await loading.present();\n    const {\n      role,\n      data\n    } = await loading.onDidDismiss();\n  }\n\n  getTeamsList(): void {\n    console.log('All teams gets list out under this function');\n\n    let token;\n    if (sessionStorage.getItem(\"auth_token\") != undefined) {\n      token = sessionStorage.getItem(\"auth_token\");\n    }\n    this.presentLoading();\n    //const httpOptions = { headers: new HttpHeaders({'authorization': token })};\n\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', token);\n\n    this.http.get(this.base_url + 'tasks', {\n      headers: headers\n    }).subscribe((response: any) => {\n      this.taskListArr = response.tasks;\n      //console.log(this.taskListArr);\n    }, error => {\n      console.log(\"ERROR\");\n      console.log(error.error);\n    });\n  }\n\n  addToMember(pvarId) {\n    //console.log(pvarId);    \n    //this.router.navigate('add-member-to-team?teamId='+pvarId);\n    //this.router.navigate(['add-member-to-team'],pvarId);\n  }\n  removeItem(taskArr){ \n        this.confirmDelete(taskArr);\n  }\n\n  async confirmDelete(taskArr) {\n    const alert = await this.alertController.create({\n    header: 'Confirm!',\n    message: 'You really want to delete task?',\n    buttons: [\n    {\n      text: 'Cancel',\n      role: 'cancel',\n      cssClass: 'secondary',\n      handler: (blah) => {\n      console.log('Confirm Cancel: blah');\n      }\n      }, {\n        text: 'Okay',\n        handler: () => {\n        this.deleteTask(taskArr);\n        }\n    }\n    ]\n    });\n\n    await alert.present();\n  }\n\n  deleteTask(taskArr){\n     console.log(taskArr);\n    let token; \n    if(sessionStorage.getItem(\"auth_token\")!=undefined){\n      token = sessionStorage.getItem(\"auth_token\"); \n    }\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', token);\n    let taskId = taskArr.taskId;\n\n    this.http.delete(this.base_url+'task/'+taskId, { headers: headers }).subscribe((response: any) => {\n           console.log(response); \n          \n          this.loadingController.dismiss().then(a => console.log('dismissed'));\n          /*this.presentLoadingCustom(response.message); */\n          this.popoverController.dismiss();\n          this.presentAlert(response.message);\n         \n     },error=>{ \n        console.log(\"ERROR\");\n        console.log(error.error);\n     });  \n  }\n    async presentAlert(message) {\n        const alert = await this.alertController.create({\n            header: 'Success Message!',\n            subHeader: message,\n            message: 'Click Okay to redirect to Dashboard and click Cancel to stay on same page.',\n            buttons: [{\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: (blah) => {\n                    console.log('Confirmed Cancel: blah');\n                }\n            }, {\n                text: 'Okay',\n                handler: () => {\n                    this.router.navigate(['dashboard']);\n                   //console.log('Confirmed Okay');\n                }\n            }]\n        });\n        alert.present();\n    }\n\n}"],"sourceRoot":""}