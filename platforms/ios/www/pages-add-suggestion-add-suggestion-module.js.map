{"version":3,"sources":["webpack:///./src/app/pages/add-suggestion/add-suggestion.module.ts","webpack:///./src/app/pages/add-suggestion/add-suggestion.page.html","webpack:///./src/app/pages/add-suggestion/add-suggestion.page.scss","webpack:///./src/app/pages/add-suggestion/add-suggestion.page.ts"],"names":[],"mappings":"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","file":"pages-add-suggestion-add-suggestion-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddSuggestionPage } from './add-suggestion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddSuggestionPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AddSuggestionPage]\n})\nexport class AddSuggestionPageModule {}\n","module.exports = \"<ion-header>\\r\\n   <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n         <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n      <ion-buttons slot=\\\"end\\\">\\r\\n         <ion-back-button defaultHref=\\\"house-chores\\\"></ion-back-button>\\r\\n      </ion-buttons>\\r\\n      <ion-title>\\r\\n         Add suggestions\\r\\n      </ion-title>\\r\\n   </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n   <ion-grid>\\r\\n      <ion-row>\\r\\n         <ion-col>\\r\\n            <ion-card>\\r\\n               <ion-card-header>\\r\\n                  <ion-card-subtitle>Task Details</ion-card-subtitle>\\r\\n                  <ion-card-title style=\\\"color: #ed502d;font-size: 22px;\\\">{{taskArr?.task_name}}</ion-card-title>\\r\\n               </ion-card-header>\\r\\n               <ion-card-content>\\r\\n                  <span class=\\\"notes\\\">{{taskArr?.notes}}</span><br>\\r\\n                  <span class=\\\"task\\\"><b>Task status</b>:&nbsp;{{taskArr?.status}}</span><br>\\r\\n                  <span class=\\\"task\\\"><b>Task due date</b>:&nbsp;{{taskDate}}</span>\\r\\n               </ion-card-content>\\r\\n            </ion-card>\\r\\n         </ion-col>\\r\\n      </ion-row>\\r\\n   </ion-grid>\\r\\n   <ion-grid>\\r\\n      <ion-row>\\r\\n         <ion-col>\\r\\n            <div class=\\\"ion-text-start\\\">\\r\\n               <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" style=\\\"color: #ed502d;\\\">Add new suggestion</ion-label>\\r\\n                  <ion-textarea placeholder=\\\"Add new suggestion\\\" [(ngModel)]=\\\"suggestion\\\"></ion-textarea>\\r\\n               </ion-item>\\r\\n            </div>\\r\\n         </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n         <ion-col>\\r\\n            <div class=\\\"ion-text-start\\\">\\r\\n               <ion-item>\\r\\n                  <button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" (click)=\\\"addSuggestion()\\\" [disabled]=\\\"suggestion === ''\\\" style=\\\"width:auto;text-align:left;    margin: 0 0 12px 0;\\\">\\r\\n                  Add\\r\\n                  </button> \\r\\n               </ion-item>\\r\\n            </div>\\r\\n         </ion-col>\\r\\n      </ion-row>\\r\\n   </ion-grid>\\r\\n   <ion-grid>\\r\\n      <ion-row>\\r\\n         <ion-col>\\r\\n            <div class=\\\"ion-text-start\\\">\\r\\n               <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\" style=\\\"color: #ed502d;font-size:18px;\\\">Old Suggestions:</ion-label>\\r\\n               </ion-item>\\r\\n            </div>\\r\\n         </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n         <ion-list>\\r\\n            <ion-card *ngFor=\\\"let suggestion of  suggestionList\\\">\\r\\n               <ion-item>\\r\\n                  <div item-left>\\r\\n                     <ion-img slot=\\\"end\\\" src=\\\"assets/images/user_dummy.png\\\" style=\\\"width: 36px;\\\">  </ion-img>\\r\\n                  </div>\\r\\n                  <div item-right>\\r\\n                     <ion-label >{{suggestion.userProfile?.firstName}}</ion-label>\\r\\n                  </div>\\r\\n               </ion-item>\\r\\n               <ion-card-header>\\r\\n                  <ion-card-title style=\\\"color: #ed502d;font-size:15px;padding-top: 0;\\\">{{ suggestion?.notes }}</ion-card-title>\\r\\n               </ion-card-header>\\r\\n               <ion-card-content style=\\\"color: #333;font-size:15px;padding-top: 0;\\\">{{ suggestion?.created_at }}</ion-card-content>\\r\\n            </ion-card>\\r\\n         </ion-list>\\r\\n      </ion-row>\\r\\n   </ion-grid>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkZC1zdWdnZXN0aW9uL2FkZC1zdWdnZXN0aW9uLnBhZ2Uuc2NzcyJ9 */\"","import {  Component,  OnInit} from '@angular/core';\nimport {  Router,  ActivatedRoute,  Params} from '@angular/router';\nimport {  FormGroup,  FormBuilder,  Validators,  FormControl,  FormArray} from '@angular/forms';\nimport {  ItemService} from '../../services/item.service';\nimport {  AlertController} from '@ionic/angular';\nimport {  LoadingController} from '@ionic/angular';\nimport {  environment} from '../../../environments/environment';\nimport {  HttpClient,  HttpHeaders,  HttpClientModule} from '@angular/common/http';\nimport {  ActionSheetController,  Platform} from '@ionic/angular';\n\n@Component({\n  selector: 'app-add-suggestion',\n  templateUrl: './add-suggestion.page.html',\n  styleUrls: ['./add-suggestion.page.scss'],\n})\nexport class AddSuggestionPage implements OnInit {\n\n  userId: any;\n  loggedInUsername: any;\n  taskId: any;\n  dataArr: any;\n  suggestionList: any;\n  taskArr: any;\n  items: any;\n  base_url: string = \"\";\n  suggestion: string = \"\";\n  isItemAvailable = false;\n  taskDate: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private http: HttpClient,\n    public itemService: ItemService,\n    public alertController: AlertController,\n    public loadingController: LoadingController,\n  ) {\n    this.userId = sessionStorage.getItem(\"loggedInId\");\n    this.loggedInUsername = sessionStorage.getItem(\"loggedInUsername\");\n    this.isItemAvailable = false;\n    this.suggestion = '';\n    this.base_url = environment.base_url;\n    this.route.queryParams.subscribe(params => {\n      console.log(params);\n      this.taskId = params['taskId'];\n    })\n\n  }\n  ngOnInit() {\n    this.getSuggestionList();\n  }\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      duration: 10000,\n      cssClass: 'custom-class custom-loading'\n    });\n    await loading.present();\n    const {\n      role,\n      data\n    } = await loading.onDidDismiss();\n    console.log('Suggestion added successfully!!!');\n  }\n  addSuggestion() {\n\n    const input_data = {\n      \"userId\": this.userId,\n      \"taskId\": this.taskId,\n      \"notes\": this.suggestion,\n    }\n    console.log(input_data);\n    let resArr: any;\n    this.presentLoading();\n    this.itemService.add_suggesation(input_data).subscribe((response: any) => {\n      console.log(response.message);\n      this.loadingController.dismiss().then(a => console.log('dismissed'));\n      this.suggestion = '';\n      this.presentAlert(response.message);\n    }, error => {\n      console.log(error)\n    })\n  }\n\n  async presentAlert(message) {\n    const alert = await this.alertController.create({\n      header: 'Success Message!',\n      subHeader: \"Done!\",\n      message: message,\n      buttons: [{\n        text: 'Okay',\n        handler: () => {\n          console.log('Confirmed Okay');\n          this.router.navigate(['house-chores']);\n        }\n      }]\n    });\n    alert.present();\n  }\n  getSuggestionList(): void {\n    let token;\n    if (sessionStorage.getItem(\"auth_token\") != undefined) {\n      token = sessionStorage.getItem(\"auth_token\");\n    }\n    this.presentLoading();\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', token);\n    this.http.get(this.base_url + 'task/' + this.taskId + '/suggestion', {\n      headers: headers\n    }).subscribe((response: any) => {\n      this.suggestionList = response.suggestionList.suggestionArr;\n      this.taskArr = response.suggestionList.taskArr;\n      let splitDate = this.taskArr.due_date.split('T');\n      this.taskDate = splitDate[0];\n      console.log('this.taskArr',this.taskArr);\n      this.loadingController.dismiss().then(a => console.log('dismissed'));\n    }, error => {\n      //console.log(\"ERROR\");\n      //console.log(error.error);\n      this.loadingController.dismiss().then(a => console.log('dismissed'));\n    });\n  }\n\n}"],"sourceRoot":""}